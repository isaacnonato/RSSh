#!/bin/bash

xml_executable="xml"

function get_exit_code {
  type $1 >/dev/null 2>&1
  local return_=$?
  echo $return_
}

function check_for_xmlstarlet {
  local return_=1
  if [[ $(get_exit_code xmlstarlet) -eq 0 ]] || [[ $(get_exit_code xml) -eq 0 ]]; then
    local return_=0
  fi
  return $return_
}

if ! get_exit_code xmlstarlet; then 
  xml_executable="xmlstarlet"
fi

if ! check_for_xmlstarlet; then 
  echo "XMLStarlet not installed."
  exit 1
fi
  
XDG_CONFIG_HOME=${XDG_CONFIG_HOME:-${HOME}/.config}
config_folder="${XDG_CONFIG_HOME}/rssh"

serialize() {
  echo "[$1] $2"
}

parse_xml() {
  title="$($xml_executable sel -t -v "//rss/channel/title" <<< "$1")"
  item_count=$($xml_executable sel -t -c "count(//rss/channel/item)" <<< "$1")

  for (( i=1; i<=$item_count; i++ ))
  do
    item_title="$($xml_executable sel -t -v "//rss/channel/item[$i]/title" <<< "$1")"
    serialize "$title" "$item_title"
  done
}

read_feed_file() {
  entries=($(cat $1))
  for entry in "${entries[@]}" 
  do 
    echo "$entry"
  done
}

check_feed_files() {
  if [[ ! -d $config_folder ]]; then 
    # No config folder, create it.
    mkdir -p ${config_folder}
    touch ${config_folder}/default.feed
  fi
}

test=$(curl http://rss.cnn.com/rss/edition.rss)
parse_xml "$test"

